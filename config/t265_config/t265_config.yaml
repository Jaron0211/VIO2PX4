%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2

imu_topic: "/camera/imu"
image0_topic: "/camera/fisheye1/image_raw"
image1_topic: "/camera/fisheye2/image_raw"
output_path: "/home/jaron/output/"

cam0_calib: "t265_cam1.yaml"
cam1_calib: "t265_cam2.yaml"
image_width: 848
image_height: 800   


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -9.9992374036993614e-01, 1.0986663190250682e-02,
       5.6397408221081878e-03, 6.4337650674579795e-03,
       -1.0989453762912547e-02, -9.9993950645029051e-01,
       -4.6405381411908397e-04, 2.6931287839813616e-02,
       5.6343012512085396e-03, -5.2599609654625779e-04,
       9.9998398886058026e-01, 1.1027256968017990e-02, 0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -9.9994503664960144e-01, 1.0381124554075459e-02,
       -1.4683095111775396e-03, -5.7045374902901895e-02,
       -1.0386285208841365e-02, -9.9993975288788328e-01,
       3.5518550195555248e-03, 2.6061948574015368e-02,
       -1.4313488004137733e-03, 3.5669100790614631e-03,
       9.9999261416927443e-01, 1.1001779358840450e-02, 0., 0., 0., 1. ]

#Multiple thread support
multiple_thread: 1

#Gpu
use_gpu: 1
use_gpu_acc_flow: 1


#feature traker paprameters
max_cnt: 120           # max feature number in feature tracking
min_dist: 20           # min distance between two features 
freq: 10             # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1          # publish tracking image as topic
flow_back: 1        # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 1.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance    
#acc_n: 2.2114469687091395e-02          # accelerometer measurement noise standard deviation. 
#gyr_n: 1.9256641116401653e-03        # gyroscope measurement noise standard deviation.     
#acc_w: 9.2445400467967007e-04          # accelerometer bias random work noise standard deviation.  
#gyr_w: 1.4372416693478342e-05    # gyroscope bias random work noise standard deviation. 

acc_n: 0.31274582956          # accelerometer measurement noise standard deviation. 
gyr_n: 0.02723300303        # gyroscope measurement noise standard deviation.     
acc_w: 0.00006536876          # accelerometer bias random work noise standard deviation.  
gyr_w: 0.00000101628    # gyroscope bias random work noise standard deviation.       
g_norm: 9.8100     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#load_previous_pose_graph: 1 # load and reuse previous pose graph; load from 'pose_graph_save_path'
#pose_graph_save_path: "/home/jaron/vins_output" # save and load path
#save_image: 1 # save image in pose graph for visualization prupose; you can close this function by setting 0
